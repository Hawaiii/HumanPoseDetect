name: "FCN-AlexNet-joint"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "jointLocation"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_value: 104
    mean_value: 116
    mean_value: 122
  }
  image_data_param {
   root_folder: "/home/mengxin1/mpii_human_pose_v1_images_resized/"
   source: "/home/mengxin1/HumanPoseDetect/preprocess/train_label_resized.txt"
   batch_size: 15
   shuffle: true
   label_num: 48 
  }
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "jointLocation"
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 104
    mean_value: 116
    mean_value: 122
  }
  image_data_param {
   root_folder: "/home/mengxin1/mpii_human_pose_v1_images_resized/"
   source: "/home/mengxin1/HumanPoseDetect/preprocess/val_label_resized.txt"
   batch_size: 15
   label_num: 48 
  }
}
layer{
   name: "jointMap"
   type: "PositionToMap"
   bottom: "data"
   bottom: "jointLocation"
   top: "jointMap"
   gaussian_param {
      std: 25
      half_window_size: 50
   }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    pad: 100
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "cconv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "cconv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fcc6"
  type: "Convolution"
  bottom: "pool5"
  top: "fcc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    kernel_size: 6
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fcc6"
  top: "fcc6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fcc6"
  top: "fcc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fcc7"
  type: "Convolution"
  bottom: "fcc6"
  top: "fcc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 4096
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fcc7"
  top: "fcc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fcc7"
  top: "fcc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "score-fr"
  type: "Convolution"
  bottom: "fcc7"
  top: "score-fcc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    engine: CAFFE
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    } 
  }
}
layer {
  name: "upsample"
  type: "Deconvolution"
  bottom: "score-fcc7"
  top: "bigscore"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 63
    group: 16
    stride: 32
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "bigscore"
  bottom: "data"
  top: "score"
}
layer {
  name: "balance"
  type: "Balance"
  bottom: "score"
  bottom: "jointMap"
  top: "bscore"
}
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "bscore"
  bottom: "jointMap"
  top: "loss"
}
